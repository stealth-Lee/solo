server:
  # 应用端口
  port: 9401

spring:
  application:
    # 应用名称
    name: solo-quartz
  profiles:
    # 环境配置
    active: @profiles.active@
  # Servlet 配置
  servlet:
    # 文件上传相关配置项
    multipart:
      max-file-size: 16MB # 单个文件大小
      max-request-size: 32MB # 设置总上传的文件大小
  messages:
    encoding: UTF-8
  # Nacos 参数配置
  cloud:
    nacos:
      config:
        # 配置中心地址
        server-addr: 127.0.0.1:8848
        # 配置中心文件后缀
        file-extension: yaml
      discovery:
        # 服务发现地址
        server-addr: 127.0.0.1:8848
  config:
    import:
      - optional:nacos:${spring.application.name}-@profiles.active@.yml

  datasource:
    url: jdbc:mysql://localhost:3306/solo-quartz
    username: root
    password: 123456

  # redis配置
  data:
    redis:
      host: 127.0.0.1
      port: 6379
#      password: 123456

  # 定时器配置
  quartz:
    # 使用数据库存储
    job-store-type: jdbc
    # 初始化完成后自动启动调度程序
    autoStartup: true
    properties:
      org:
        quartz:
          # 调度器配置
          scheduler:
            instanceName: bootQuartzScheduler
            instanceId: AUTO
          # 存储配置
          jobStore:
            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: qrtz_
            isClustered: true
            misfireThreshold: 12000
            clusterCheckinInterval: 15000
            useProperties: false
          # 线程池配置
          threadPool:
            threadNamePrefix: Boot_Job_Pool
            threadPriority: 5
            threadCount: 10
            class: org.quartz.simpl.SimpleThreadPool

mybatis-flex:
  global-config:
    # 逻辑删除数据存在标记值,默认值为 0
    normal-value-of-logic-delete: 0
    # 逻辑删除数据删除标记值,默认值为 1
    deleted-value-of-logic-delete: 1

dubbo:
  application:
    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启
    qos-enable: false
  protocol:
    # 如需使用 Triple 3.0 新协议 可查看官方文档
    # 使用 dubbo 协议通信
    name: dubbo
    # dubbo 协议端口(-1表示自增端口,从20880开始)
    port: -1
    # 指定dubbo协议注册ip
    # host: 192.168.0.100
  # 消费者相关配置
  consumer:
    # 超时时间
    timeout: 3000
  scan:
    # 接口实现类扫描
    base-packages: org.solo.**.dubbo
  # 自定义配置
  custom:
    # 全局请求log
    request-log: true
    # info 基础信息 param 参数信息 full 全部
    log-level: info

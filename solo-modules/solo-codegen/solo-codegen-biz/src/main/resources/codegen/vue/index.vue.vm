<template>
  <div class="main">
    <!-- 搜索工作栏 -->
    <el-form
      ref="queryFormRef"
      :inline="true"
      :model="props.queryParams"
      class="search-form bg-bg_color w-[99/100] pl-8 pt-[12px]"
    >
#foreach ($column in $columns)
  #if (${column.isQuery})
    #set ($dict = $column.dictCode)
    #if(($column.FormType == 'SELECT' || $column.FormType == 'RADIO' || $column.FormType == 'SWITCH') && $dict)
      <el-form-item :label="$t('${i18nBusinessName}.column.${column.javaField}')" prop="${column.javaField}">
        <el-select
          v-model="props.queryParams.${column.javaField}"
          :placeholder="$t('${i18nBusinessName}.tip.${column.javaField}')"
          clearable
          class="!w-[180px]"
        >
          <el-option
            v-for="dict in ${dict}"
            :key="dict.value"
            :label="dict.label"
            :value="dict.value"
          />
        </el-select>
      </el-form-item>
    #else
      <el-form-item :label="$t('${i18nBusinessName}.column.${column.javaField}')" prop="${column.javaField}">
      #if($column.JavaType == 'LOCAL_DATE_TIME')
        #if($column.queryMode == 'BETWEEN')
        <el-date-picker
          v-model="props.queryParams.${column.javaField}"
          type="datetimerange"
          value-format="YYYY-MM-DD HH:mm:ss"
          :range-separator="$t('tip.rangeSeparator')"
          :start-placeholder="$t('tip.time.start')"
          :end-placeholder="$t('tip.time.end')"
        />
        #else
          <el-date-picker
            v-model="props.queryParams.${column.javaField}"
            type="datetime"
            value-format="YYYY-MM-DD HH:mm:ss"
          />
        #end
      #elseif($column.JavaType == 'LOCAL_DATE')
        #if($column.queryMode == 'BETWEEN')
        <el-date-picker
          v-model="props.queryParams.${column.javaField}"
          type="daterange"
          value-format="YYYY-MM-DD"
          :range-separator="$t('tip.rangeSeparator')"
          :start-placeholder="$t('tip.date.start')"
          :end-placeholder="$t('tip.date.end')"
        />
        #else
          <el-date-picker
            v-model="props.queryParams.${column.javaField}"
            type="date"
            value-format="YYYY-MM-DD"
          />
        #end
      #elseif($column.JavaType == 'LOCAL_TIME')
        #if($column.queryMode == 'BETWEEN')
        <el-time-picker
          v-model="props.queryParams.${column.javaField}"
          is-range
          :range-separator="$t('tip.rangeSeparator')"
          :start-placeholder="$t('tip.time.start')"
          :end-placeholder="$t('tip.time.end')"
        />
        #else
        <el-time-picker
          v-model="props.queryParams.${column.javaField}"
          :placeholder="$t('${i18nBusinessName}.tip.${column.javaField}')"
        />
        #end
        #else
        <el-input
          v-model="props.queryParams.${column.javaField}"
          :placeholder="$t('${i18nBusinessName}.tip.${column.javaField}')"
          clearable
          class="!w-[180px]"
        />
      #end
      </el-form-item>
    #end
  #end
#end
      <el-form-item>
        <el-tooltip :content="$t('buttons.common.search')" placement="top">
          <el-button
            :icon="useRenderIcon('ep:search')"
            :loading="props.loading"
            @click="handleQuery"
            circle
          />
        </el-tooltip>
        <el-tooltip :content="$t('buttons.common.reset')" placement="top">
          <el-button
            :icon="useRenderIcon('ep:refresh-right')"
            @click="handleReset()"
            circle
          />
        </el-tooltip>
      </el-form-item>
    </el-form>

    #set ( $d = '$')
    <!-- 列表 -->
    <PureTableBar
      :title="`${props.title}${d}{t('commons.other.list')}`"
      :columns="columns"
#if ($table.tplType == 'TREE_TABLE')
      :tableRef="tableRef?.getTableRef()"
#end
      @refresh="handleQuery"
    >
      <template #buttons>
        <el-button
          type="primary"
          :icon="useRenderIcon('ep:plus')"
          @click="handleCreate()"
          plain
        >
          {{ t("buttons.common.create") }}
        </el-button>
        <el-button
          type="success"
          :icon="useRenderIcon('ep:edit-pen')"
          @click="handleUpdate()"
          :disabled="props.single"
          plain
        >
          {{ t("buttons.common.edit") }}
        </el-button>
        <el-popconfirm
          width="180"
          icon-color="red"
          :title="$t('commons.ask.delete')"
          @confirm="handleDelete()"
        >
          <template #reference>
            <el-button
              type="danger"
              :icon="useRenderIcon('ep:delete')"
              :disabled="props.multiple"
              plain
            >
              {{ t("buttons.common.delete") }}
            </el-button>
          </template>
        </el-popconfirm>
        <el-button
          type="info"
          :icon="useRenderIcon('ep:upload')"
          @click="handleUpdate()"
          plain
        >
          {{ t("buttons.common.import") }}
        </el-button>
        <el-button
          type="warning"
          :icon="useRenderIcon('ep:download')"
          @click="handleUpdate()"
          plain
        >
          {{ t("buttons.common.export") }}
        </el-button>
      </template>
      <template v-slot="{ size, dynamicColumns }">
        <pure-table
#if ($table.tplType == 'TREE_TABLE')
          ref="tableRef"
          row-key="${primaryColumn.javaField}"
          default-expand-all
#end
          align-whole="center"
          table-layout="auto"
          :data="props.dataList"
          :columns="dynamicColumns"
          :loading="props.loading"
          :size="size"
          :header-cell-style="{
            background: 'var(--el-fill-color-light)',
            color: 'var(--el-text-color-primary)'
          }"
          showOverflowTooltip
          adaptive
        #if ($table.tplType == 'SINGLE_TABLE')
          :pagination="props.pagination"
          :paginationSmall="size === 'small' ? true : false"
          @selection-change="handleSelectionChange"
          @page-size-change="handleSizeChange"
          @page-current-change="handleCurrentChange"
        #end
        >
          <template #operation="{ row }">
            <el-button
              class="reset-margin"
              link
              type="primary"
              :size="size"
              :icon="useRenderIcon('ep:edit-pen')"
              @click="handleUpdate(row.${primaryColumn.javaField})"
            >
              {{ t("buttons.common.edit") }}
            </el-button>
            <el-popconfirm
              width="180"
              icon-color="red"
              :title="$t('commons.ask.delete')"
              @confirm="handleDelete(row.${primaryColumn.javaField})"
            >
              <template #reference>
                <el-button
                  class="reset-margin"
                  link
                  type="danger"
                  :size="size"
                  :icon="useRenderIcon('ep:delete')"
                >
                  {{ t("buttons.common.delete") }}
                </el-button>
              </template>
            </el-popconfirm>
          </template>
        </pure-table>
      </template>
    </PureTableBar>
    <${modelClassName}Form ref="dialogFormRef" @refresh="loadData()" />
  </div>
</template>

<script setup lang="tsx">
import { PureTableBar } from "@/components/RePureTableBar";
import { useRenderIcon } from "@/components/ReIcon/src/hooks";
import { BasicTableProps } from "@/hooks/table";
  #if ($table.tplType == 'TREE_TABLE')
    #set ($listApi = 'listing')
  #else
    #set ($listApi = 'paging')
  #end
import { ${listApi}, deleting#if (${table.isSwitch}), updateStatus#end } from "@/api/${table.moduleName}/${table.businessName}";

defineOptions({ name: "${table.className}" });

const ${modelClassName}Form = defineAsyncComponent(() => import("./form.vue"));
const { t } = useI18n();
const queryFormRef = ref();
const dialogFormRef = ref();

#if ($dictColumns.size() > 0)
const {
  #foreach ($column in $dictColumns)
  ${column.dictCode}#if ($foreach.last)#else,#end
  #end
} = useDict(
  #foreach ($column in $dictColumns)
  "${column.dictCode}"#if ($foreach.last)#else,#end
  #end
);
#end
const props: BasicTableProps = reactive<BasicTableProps>({
#if ($table.tplType == 'TREE_TABLE')
  type: "tree",
#end
  title: t("${i18nBusinessName}.title"),
  pk: "${primaryColumn.javaField}",
  listApi: ${listApi},
  deleteApi: deleting,
#if (${table.isSwitch})
  switchApi: updateStatus,
  switchField: "${table.switchField}",
#end
  queryRef: queryFormRef,
  formRef: dialogFormRef
});

const {
  loadData,
  #if ($table.tplType == 'SINGLE_TABLE')
  handleSizeChange,
  handleCurrentChange,
  handleSelectionChange,
  #end
  handleQuery,
  handleReset,
  handleCreate,
  handleUpdate,
  handleDelete#if (${table.isSwitch}),
  handleSwitch#end
} = useTable(props);

const columns: TableColumnList = [
  {
    type: "selection",
    align: "left",
    width: 10
  },
#foreach ($column in $columns)
  #if (${column.isList})
  {
    label: t("${i18nBusinessName}.column.${column.javaField}"),
    prop: "${column.javaField}",
    minWidth: 120#if (${column.dictCode} && $table.switchField != $column.javaField),
    cellRenderer: scope => (
      <dict-tag options={${column.dictCode}.value} value={scope.row.${column.javaField}}></dict-tag>
    )#elseif (${table.isSwitch} && $table.switchField == $column.javaField),
    cellRenderer: scope => (
      <el-switch
        v-model={scope.row.${table.switchField}}
        active-value={1}
        inactive-value={0}
        onChange={() => handleSwitch(scope.row)}
      />
    )#end
  },
  #end
#end
  {
    label: t("commons.columns.action"),
    fixed: "right",
    width: 240,
    slot: "operation"
  }
];
</script>

<style scoped lang="scss">
:deep(.el-dropdown-menu__item i) {
  margin: 0;
}

.search-form {
  :deep(.el-form-item) {
    margin-bottom: 12px;
  }
}
</style>
